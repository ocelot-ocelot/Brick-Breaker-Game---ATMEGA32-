
ATmega_GLCD_Animation.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000bf4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000c48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000c48  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c78  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000aa8  00000000  00000000  00000cfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000701  00000000  00000000  000017a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000414  00000000  00000000  00001ea5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  000022bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000416  00000000  00000000  0000237c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000031f  00000000  00000000  00002792  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00002ab1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 04 	jmp	0x854	; 0x854 <__ctors_end>
   4:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
   8:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
   c:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  10:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  14:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  18:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  1c:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  20:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  24:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  28:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  2c:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  30:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  34:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  38:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  3c:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  40:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  44:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  48:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  4c:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>
  50:	0c 94 34 04 	jmp	0x868	; 0x868 <__bad_interrupt>

00000054 <__trampolines_end>:
	...
  6c:	00 80       	ld	r0, Z
  6e:	c0 e0       	ldi	r28, 0x00	; 0
  70:	f0 f0       	brcs	.+60     	; 0xae <__trampolines_end+0x5a>
  72:	f8 fc       	.word	0xfcf8	; ????
  74:	fc fe       	.word	0xfefc	; ????
  76:	fc c0       	rjmp	.+504    	; 0x270 <__trampolines_end+0x21c>
  78:	80 80       	ld	r8, Z
	...
  8a:	e0 80       	ld	r14, Z
	...
  9c:	00 80       	ld	r0, Z
  9e:	e0 00       	.word	0x00e0	; ????
	...
  ac:	00 00       	nop
  ae:	00 80       	ld	r0, Z
  b0:	80 c0       	rjmp	.+256    	; 0x1b2 <__trampolines_end+0x15e>
  b2:	fc fe       	.word	0xfefc	; ????
  b4:	fc fc       	.word	0xfcfc	; ????
  b6:	f8 f0       	brcs	.+62     	; 0xf6 <__trampolines_end+0xa2>
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	c0 80       	ld	r12, Z
	...
  e4:	00 80       	ld	r0, Z
  e6:	c0 e0       	ldi	r28, 0x00	; 0
  e8:	f0 f8       	bld	r15, 0
  ea:	fc fe       	.word	0xfefc	; ????
  ec:	ff ff       	.word	0xffff	; ????
  ee:	ff ff       	.word	0xffff	; ????
  f0:	ff ff       	.word	0xffff	; ????
  f2:	ff ff       	.word	0xffff	; ????
  f4:	ff ff       	.word	0xffff	; ????
  f6:	ff ff       	.word	0xffff	; ????
  f8:	ff ff       	.word	0xffff	; ????
  fa:	ff ff       	.word	0xffff	; ????
  fc:	ff fe       	.word	0xfeff	; ????
  fe:	fe fe       	.word	0xfefe	; ????
 100:	fc fc       	.word	0xfcfc	; ????
 102:	fc f8       	.word	0xf8fc	; ????
 104:	f8 f8       	.word	0xf8f8	; ????
 106:	f8 f8       	.word	0xf8f8	; ????
 108:	f8 f8       	.word	0xf8f8	; ????
 10a:	ff ff       	.word	0xffff	; ????
 10c:	ff fe       	.word	0xfeff	; ????
 10e:	fe fe       	.word	0xfefe	; ????
 110:	fe fe       	.word	0xfefe	; ????
 112:	fe fe       	.word	0xfefe	; ????
 114:	fe fe       	.word	0xfefe	; ????
 116:	fe fe       	.word	0xfefe	; ????
 118:	fe fe       	.word	0xfefe	; ????
 11a:	fe fe       	.word	0xfefe	; ????
 11c:	ff ff       	.word	0xffff	; ????
 11e:	ff f8       	.word	0xf8ff	; ????
 120:	f8 f8       	.word	0xf8f8	; ????
 122:	f8 f8       	.word	0xf8f8	; ????
 124:	f8 f8       	.word	0xf8f8	; ????
 126:	fc fc       	.word	0xfcfc	; ????
 128:	fc fe       	.word	0xfefc	; ????
 12a:	fe fe       	.word	0xfefe	; ????
 12c:	ff ff       	.word	0xffff	; ????
 12e:	ff ff       	.word	0xffff	; ????
 130:	ff ff       	.word	0xffff	; ????
 132:	ff ff       	.word	0xffff	; ????
 134:	ff ff       	.word	0xffff	; ????
 136:	ff ff       	.word	0xffff	; ????
 138:	ff ff       	.word	0xffff	; ????
 13a:	ff ff       	.word	0xffff	; ????
 13c:	ff fe       	.word	0xfeff	; ????
 13e:	fc f8       	.word	0xf8fc	; ????
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	c0 80       	ld	r12, Z
	...
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	f0 fc       	sbrc	r15, 0
 164:	fe ff       	.word	0xfffe	; ????
 166:	ff ff       	.word	0xffff	; ????
 168:	ff ff       	.word	0xffff	; ????
 16a:	ff ff       	.word	0xffff	; ????
 16c:	ff ff       	.word	0xffff	; ????
 16e:	ff ff       	.word	0xffff	; ????
 170:	ff ff       	.word	0xffff	; ????
 172:	ff ff       	.word	0xffff	; ????
 174:	ff ff       	.word	0xffff	; ????
 176:	ff ff       	.word	0xffff	; ????
 178:	ff ff       	.word	0xffff	; ????
 17a:	ff ff       	.word	0xffff	; ????
 17c:	ff ff       	.word	0xffff	; ????
 17e:	ff ff       	.word	0xffff	; ????
 180:	ff ff       	.word	0xffff	; ????
 182:	ff ff       	.word	0xffff	; ????
 184:	ff ff       	.word	0xffff	; ????
 186:	ff ff       	.word	0xffff	; ????
 188:	ff ff       	.word	0xffff	; ????
 18a:	ff ff       	.word	0xffff	; ????
 18c:	ff ff       	.word	0xffff	; ????
 18e:	ff ff       	.word	0xffff	; ????
 190:	ff ff       	.word	0xffff	; ????
 192:	ff ff       	.word	0xffff	; ????
 194:	ff ff       	.word	0xffff	; ????
 196:	ff ff       	.word	0xffff	; ????
 198:	ff ff       	.word	0xffff	; ????
 19a:	ff ff       	.word	0xffff	; ????
 19c:	ff ff       	.word	0xffff	; ????
 19e:	ff ff       	.word	0xffff	; ????
 1a0:	ff ff       	.word	0xffff	; ????
 1a2:	ff ff       	.word	0xffff	; ????
 1a4:	ff ff       	.word	0xffff	; ????
 1a6:	ff ff       	.word	0xffff	; ????
 1a8:	ff ff       	.word	0xffff	; ????
 1aa:	ff ff       	.word	0xffff	; ????
 1ac:	ff ff       	.word	0xffff	; ????
 1ae:	ff ff       	.word	0xffff	; ????
 1b0:	ff ff       	.word	0xffff	; ????
 1b2:	ff ff       	.word	0xffff	; ????
 1b4:	ff ff       	.word	0xffff	; ????
 1b6:	ff ff       	.word	0xffff	; ????
 1b8:	ff ff       	.word	0xffff	; ????
 1ba:	ff ff       	.word	0xffff	; ????
 1bc:	ff ff       	.word	0xffff	; ????
 1be:	ff ff       	.word	0xffff	; ????
 1c0:	ff ff       	.word	0xffff	; ????
 1c2:	ff ff       	.word	0xffff	; ????
 1c4:	ff fc       	.word	0xfcff	; ????
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 00       	.word	0x0080	; ????
	...
 1da:	00 00       	nop
 1dc:	e0 f8       	bld	r14, 0
 1de:	fc ff       	.word	0xfffc	; ????
 1e0:	ff ff       	.word	0xffff	; ????
 1e2:	ff ff       	.word	0xffff	; ????
 1e4:	ff ff       	.word	0xffff	; ????
 1e6:	ff ff       	.word	0xffff	; ????
 1e8:	ff ff       	.word	0xffff	; ????
 1ea:	ff ff       	.word	0xffff	; ????
 1ec:	ff ff       	.word	0xffff	; ????
 1ee:	ff ff       	.word	0xffff	; ????
 1f0:	ff ff       	.word	0xffff	; ????
 1f2:	ff ff       	.word	0xffff	; ????
 1f4:	ff ff       	.word	0xffff	; ????
 1f6:	ff ff       	.word	0xffff	; ????
 1f8:	ff ff       	.word	0xffff	; ????
 1fa:	ff ff       	.word	0xffff	; ????
 1fc:	ff ff       	.word	0xffff	; ????
 1fe:	ff ff       	.word	0xffff	; ????
 200:	ff ff       	.word	0xffff	; ????
 202:	ff ff       	.word	0xffff	; ????
 204:	ff ff       	.word	0xffff	; ????
 206:	ff ff       	.word	0xffff	; ????
 208:	ff ff       	.word	0xffff	; ????
 20a:	ff ff       	.word	0xffff	; ????
 20c:	ff ff       	.word	0xffff	; ????
 20e:	ff ff       	.word	0xffff	; ????
 210:	ff ff       	.word	0xffff	; ????
 212:	ff ff       	.word	0xffff	; ????
 214:	ff ff       	.word	0xffff	; ????
 216:	ff ff       	.word	0xffff	; ????
 218:	ff ff       	.word	0xffff	; ????
 21a:	ff ff       	.word	0xffff	; ????
 21c:	ff ff       	.word	0xffff	; ????
 21e:	ff ff       	.word	0xffff	; ????
 220:	ff ff       	.word	0xffff	; ????
 222:	ff ff       	.word	0xffff	; ????
 224:	ff ff       	.word	0xffff	; ????
 226:	ff ff       	.word	0xffff	; ????
 228:	ff ff       	.word	0xffff	; ????
 22a:	ff ff       	.word	0xffff	; ????
 22c:	ff ff       	.word	0xffff	; ????
 22e:	ff ff       	.word	0xffff	; ????
 230:	ff ff       	.word	0xffff	; ????
 232:	ff ff       	.word	0xffff	; ????
 234:	ff ff       	.word	0xffff	; ????
 236:	ff ff       	.word	0xffff	; ????
 238:	ff ff       	.word	0xffff	; ????
 23a:	ff ff       	.word	0xffff	; ????
 23c:	ff ff       	.word	0xffff	; ????
 23e:	ff ff       	.word	0xffff	; ????
 240:	ff ff       	.word	0xffff	; ????
 242:	ff ff       	.word	0xffff	; ????
 244:	ff ff       	.word	0xffff	; ????
 246:	ff ff       	.word	0xffff	; ????
 248:	ff ff       	.word	0xffff	; ????
 24a:	fc f8       	.word	0xf8fc	; ????
 24c:	e0 00       	.word	0x00e0	; ????
	...
 256:	00 00       	nop
 258:	80 f0       	brcs	.+32     	; 0x27a <__trampolines_end+0x226>
 25a:	fc ff       	.word	0xfffc	; ????
 25c:	ff ff       	.word	0xffff	; ????
 25e:	ff ff       	.word	0xffff	; ????
 260:	ff ff       	.word	0xffff	; ????
 262:	ff ff       	.word	0xffff	; ????
 264:	ff ff       	.word	0xffff	; ????
 266:	ff ff       	.word	0xffff	; ????
 268:	ff ff       	.word	0xffff	; ????
 26a:	ff ff       	.word	0xffff	; ????
 26c:	ff ff       	.word	0xffff	; ????
 26e:	ff ff       	.word	0xffff	; ????
 270:	ff ff       	.word	0xffff	; ????
 272:	ff ff       	.word	0xffff	; ????
 274:	ff ff       	.word	0xffff	; ????
 276:	ff ff       	.word	0xffff	; ????
 278:	ff ff       	.word	0xffff	; ????
 27a:	ff ff       	.word	0xffff	; ????
 27c:	ff ff       	.word	0xffff	; ????
 27e:	ff ff       	.word	0xffff	; ????
 280:	ff ff       	.word	0xffff	; ????
 282:	ff ff       	.word	0xffff	; ????
 284:	ff ff       	.word	0xffff	; ????
 286:	ff ff       	.word	0xffff	; ????
 288:	ff ff       	.word	0xffff	; ????
 28a:	ff ff       	.word	0xffff	; ????
 28c:	ff ff       	.word	0xffff	; ????
 28e:	ff ff       	.word	0xffff	; ????
 290:	ff ff       	.word	0xffff	; ????
 292:	ff ff       	.word	0xffff	; ????
 294:	ff ff       	.word	0xffff	; ????
 296:	ff ff       	.word	0xffff	; ????
 298:	ff ff       	.word	0xffff	; ????
 29a:	ff ff       	.word	0xffff	; ????
 29c:	ff ff       	.word	0xffff	; ????
 29e:	ff ff       	.word	0xffff	; ????
 2a0:	ff ff       	.word	0xffff	; ????
 2a2:	ff ff       	.word	0xffff	; ????
 2a4:	ff ff       	.word	0xffff	; ????
 2a6:	ff ff       	.word	0xffff	; ????
 2a8:	ff ff       	.word	0xffff	; ????
 2aa:	ff ff       	.word	0xffff	; ????
 2ac:	ff ff       	.word	0xffff	; ????
 2ae:	ff ff       	.word	0xffff	; ????
 2b0:	ff ff       	.word	0xffff	; ????
 2b2:	ff ff       	.word	0xffff	; ????
 2b4:	ff ff       	.word	0xffff	; ????
 2b6:	ff ff       	.word	0xffff	; ????
 2b8:	ff ff       	.word	0xffff	; ????
 2ba:	ff ff       	.word	0xffff	; ????
 2bc:	ff ff       	.word	0xffff	; ????
 2be:	ff ff       	.word	0xffff	; ????
 2c0:	ff ff       	.word	0xffff	; ????
 2c2:	ff ff       	.word	0xffff	; ????
 2c4:	ff ff       	.word	0xffff	; ????
 2c6:	ff ff       	.word	0xffff	; ????
 2c8:	ff ff       	.word	0xffff	; ????
 2ca:	ff ff       	.word	0xffff	; ????
 2cc:	ff ff       	.word	0xffff	; ????
 2ce:	fc f0       	brlt	.+62     	; 0x30e <__trampolines_end+0x2ba>
 2d0:	80 00       	.word	0x0080	; ????
 2d2:	00 00       	nop
 2d4:	00 00       	nop
 2d6:	e0 fc       	sbrc	r14, 0
 2d8:	ff ff       	.word	0xffff	; ????
 2da:	ff ff       	.word	0xffff	; ????
 2dc:	ff ff       	.word	0xffff	; ????
 2de:	ff ff       	.word	0xffff	; ????
 2e0:	ff ff       	.word	0xffff	; ????
 2e2:	ff 7f       	andi	r31, 0xFF	; 255
 2e4:	7f 7f       	andi	r23, 0xFF	; 255
 2e6:	7f 3f       	cpi	r23, 0xFF	; 255
 2e8:	3f 7f       	andi	r19, 0xFF	; 255
 2ea:	ff ff       	.word	0xffff	; ????
 2ec:	ff ff       	.word	0xffff	; ????
 2ee:	3f 1f       	adc	r19, r31
 2f0:	1f 1f       	adc	r17, r31
 2f2:	1f 1f       	adc	r17, r31
 2f4:	1f 1f       	adc	r17, r31
 2f6:	0f 0f       	add	r16, r31
 2f8:	0f 1f       	adc	r16, r31
 2fa:	3f 3f       	cpi	r19, 0xFF	; 255
 2fc:	7f ff       	.word	0xff7f	; ????
 2fe:	ff ff       	.word	0xffff	; ????
 300:	ff ff       	.word	0xffff	; ????
 302:	ff ff       	.word	0xffff	; ????
 304:	ff ff       	.word	0xffff	; ????
 306:	ff ff       	.word	0xffff	; ????
 308:	ff ff       	.word	0xffff	; ????
 30a:	ff ff       	.word	0xffff	; ????
 30c:	ff ff       	.word	0xffff	; ????
 30e:	ff ff       	.word	0xffff	; ????
 310:	ff ff       	.word	0xffff	; ????
 312:	ff ff       	.word	0xffff	; ????
 314:	ff ff       	.word	0xffff	; ????
 316:	ff ff       	.word	0xffff	; ????
 318:	ff ff       	.word	0xffff	; ????
 31a:	ff ff       	.word	0xffff	; ????
 31c:	ff ff       	.word	0xffff	; ????
 31e:	ff ff       	.word	0xffff	; ????
 320:	ff ff       	.word	0xffff	; ????
 322:	ff ff       	.word	0xffff	; ????
 324:	ff ff       	.word	0xffff	; ????
 326:	ff ff       	.word	0xffff	; ????
 328:	ff ff       	.word	0xffff	; ????
 32a:	ff ff       	.word	0xffff	; ????
 32c:	7f 3f       	cpi	r23, 0xFF	; 255
 32e:	3f 1f       	adc	r19, r31
 330:	0f 0f       	add	r16, r31
 332:	0f 1f       	adc	r16, r31
 334:	1f 1f       	adc	r17, r31
 336:	1f 1f       	adc	r17, r31
 338:	1f 1f       	adc	r17, r31
 33a:	3f ff       	.word	0xff3f	; ????
 33c:	ff ff       	.word	0xffff	; ????
 33e:	ff 7f       	andi	r31, 0xFF	; 255
 340:	3f 3f       	cpi	r19, 0xFF	; 255
 342:	7f 7f       	andi	r23, 0xFF	; 255
 344:	7f 7f       	andi	r23, 0xFF	; 255
 346:	ff ff       	.word	0xffff	; ????
 348:	ff ff       	.word	0xffff	; ????
 34a:	ff ff       	.word	0xffff	; ????
 34c:	ff ff       	.word	0xffff	; ????
 34e:	ff ff       	.word	0xffff	; ????
 350:	ff fc       	.word	0xfcff	; ????
 352:	e0 00       	.word	0x00e0	; ????
 354:	00 fc       	sbrc	r0, 0
 356:	7f 3f       	cpi	r23, 0xFF	; 255
 358:	0f 0f       	add	r16, r31
 35a:	07 03       	mulsu	r16, r23
 35c:	01 01       	movw	r0, r2
 35e:	01 01       	movw	r0, r2
	...
 368:	00 00       	nop
 36a:	00 01       	movw	r0, r0
 36c:	01 00       	.word	0x0001	; ????
	...
 37e:	00 01       	movw	r0, r0
 380:	03 03       	mulsu	r16, r19
 382:	07 0f       	add	r16, r23
 384:	1f 3f       	cpi	r17, 0xFF	; 255
 386:	3f 7f       	andi	r19, 0xFF	; 255
 388:	ff ff       	.word	0xffff	; ????
 38a:	ff ff       	.word	0xffff	; ????
 38c:	ff ff       	.word	0xffff	; ????
 38e:	ff ff       	.word	0xffff	; ????
 390:	ff ff       	.word	0xffff	; ????
 392:	ff ff       	.word	0xffff	; ????
 394:	ff ff       	.word	0xffff	; ????
 396:	ff ff       	.word	0xffff	; ????
 398:	ff ff       	.word	0xffff	; ????
 39a:	ff ff       	.word	0xffff	; ????
 39c:	ff ff       	.word	0xffff	; ????
 39e:	ff ff       	.word	0xffff	; ????
 3a0:	ff 7f       	andi	r31, 0xFF	; 255
 3a2:	3f 3f       	cpi	r19, 0xFF	; 255
 3a4:	1f 0f       	add	r17, r31
 3a6:	07 03       	mulsu	r16, r23
 3a8:	03 01       	movw	r0, r6
	...
 3ba:	00 00       	nop
 3bc:	01 01       	movw	r0, r2
	...
 3c6:	00 00       	nop
 3c8:	00 01       	movw	r0, r0
 3ca:	01 01       	movw	r0, r2
 3cc:	01 03       	mulsu	r16, r17
 3ce:	07 0f       	add	r16, r23
 3d0:	0f 3f       	cpi	r16, 0xFF	; 255
 3d2:	7f fc       	.word	0xfc7f	; ????
 3d4:	00 01       	movw	r0, r0
	...
 40a:	01 03       	mulsu	r16, r17
 40c:	03 07       	cpc	r16, r19
 40e:	0f 1f       	adc	r16, r31
 410:	1f 3f       	cpi	r17, 0xFF	; 255
 412:	7f ff       	.word	0xff7f	; ????
 414:	ff ff       	.word	0xffff	; ????
 416:	7f 3f       	cpi	r23, 0xFF	; 255
 418:	1f 1f       	adc	r17, r31
 41a:	0f 07       	cpc	r16, r31
 41c:	03 03       	mulsu	r16, r19
 41e:	01 00       	.word	0x0001	; ????
	...
 450:	00 00       	nop
 452:	00 01       	movw	r0, r0

00000454 <img>:
	...
 46c:	00 80 c0 e0 e0 f0 f8 fc fc fe f8 c0 80 80 00 00     ................
	...
 488:	00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
 498:	00 00 00 00 00 80 00 00 00 00 00 00 00 00 00 00     ................
 4a8:	00 00 00 00 00 00 00 80 80 c0 f8 fe fc fc f8 f0     ................
 4b8:	e0 e0 c0 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
 4e4:	00 80 c0 e0 f0 f8 fc fe ff ff ff ff ff ff ff ff     ................
 4f4:	ff ff ff ff ff ff ff 7f 3f 1e 1e 1e 1c 1c 1c 18     ........?.......
 504:	18 18 18 18 08 08 08 0f 0f 0e 0e 0e 0e 0e 0e 0e     ................
 514:	0e 0e 0e 0e 1e 1e 1e 1e 1f 1f 18 18 18 18 98 98     ................
 524:	98 98 9c 9c 9c 1e 1e 1e 3f 7f ff ff ff ff ff ff     ........?.......
 534:	ff ff ff ff ff ff ff ff ff fe fc f8 f0 e0 c0 80     ................
	...
 560:	80 e0 f0 fc fe ff ff ff ff ff ff ff ff ff ff ff     ................
 570:	ff ff ff 7f 3f 1f 0f 87 e3 f1 38 1c 06 03 01 00     ....?.....8.....
 580:	00 00 00 00 00 00 3c 7c 7e fe fe ff ff ff ff ff     ......<|~.......
 590:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
 5a0:	fe fe fe fc fc fd f9 fb f3 e3 e3 c0 c0 80 08 31     ...............1
 5b0:	e3 87 0f 1f 3f 7f ff ff ff ff ff ff ff ff ff ff     ....?...........
 5c0:	ff ff ff ff fe fc f0 e0 80 00 00 00 00 00 00 00     ................
	...
 5dc:	c0 f0 fc fe ff ff ff ff ff ff ff ff ff ff ff ff     ................
 5ec:	ff ff ff ff cf 03 01 30 fc fe ff 3f 03 00 00 00     .......0...?....
	...
 614:	00 00 01 01 01 01 01 01 01 01 01 01 01 03 03 03     ................
 624:	03 07 07 07 0f 1f 1f 3f 7f ff ff fe fc f9 e7 ce     .......?........
 634:	18 30 01 83 cf ff ff ff ff ff ff ff ff ff ff ff     .0..............
 644:	ff ff ff ff ff fe fc f0 c0 00 00 00 00 00 00 00     ................
 654:	00 00 00 00 80 f0 fc ff ff ff ff ff ff ff ff ff     ................
 664:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff fe fc     ................
 674:	f8 f1 e3 c0 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
 6ac:	00 00 01 03 0f c7 e1 f0 f8 fc fe ff ff ff ff ff     ................
 6bc:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
 6cc:	ff ff fc f0 80 00 00 00 00 00 c0 fc ff ff ff ff     ................
 6dc:	ff ff ff ff ff ff ff 7f 7f 7f 7f 3f 3f 7f ff ff     ...........??...
 6ec:	ff 7f 3f 1f 1f 1f 1f 1f 1f 0f 0f 0f 0f 1e 1c 38     ..?............8
 6fc:	70 60 c2 c6 8c 1c 3c 7c f8 f8 f8 f8 f8 f0 f0 f0     p`....<|........
 70c:	f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0 f0     ................
 71c:	e0 e0 c0 c0 80 00 00 00 00 00 00 00 80 c0 c0 60     ...............`
 72c:	70 38 1c 1e 0f 0f 0f 0f 1f 1f 1f 1f 1f 1f 3f 7f     p8............?.
 73c:	ff ff ff 7f 3f 3f 7f 7f 7f 7f ff ff ff ff ff ff     ....??..........
 74c:	ff ff ff ff ff fc c0 00 00 fc 7f 3f 0f 07 07 03     ...........?....
 75c:	01 01 01 00 00 00 00 00 00 00 00 00 00 00 00 01     ................
 76c:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
 77c:	00 00 00 01 03 03 06 0c 18 10 21 43 03 83 07 07     ..........!C....
 78c:	0f 8f 8f 8f 8f 9f 9f 9f 9f 9f 8f 8f 8f 8f 8f 0f     ................
 79c:	07 07 03 83 01 40 20 10 18 0c 06 03 03 01 00 00     .....@ .........
	...
 7bc:	01 01 00 00 00 00 00 00 00 00 00 00 00 00 01 01     ................
 7cc:	01 03 07 07 0f 3f 7f fc 00 01 00 00 00 00 00 00     .....?..........
	...
 808:	00 00 01 02 00 00 01 01 03 07 0f 1f 1f 1f 0f 07     ................
 818:	03 01 00 00 00 02 01 00 00 00 00 00 00 00 00 00     ................
	...
 850:	00 00 00 01                                         ....

00000854 <__ctors_end>:
 854:	11 24       	eor	r1, r1
 856:	1f be       	out	0x3f, r1	; 63
 858:	cf e5       	ldi	r28, 0x5F	; 95
 85a:	d4 e0       	ldi	r29, 0x04	; 4
 85c:	de bf       	out	0x3e, r29	; 62
 85e:	cd bf       	out	0x3d, r28	; 61
 860:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <main>
 864:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <_exit>

00000868 <__bad_interrupt>:
 868:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000086c <GLCD_Command>:

#define TotalPage			8

void GLCD_Command(char Command)		/* GLCD command function */
{
	Data_Port = Command;			/* Copy command on data pin */
 86c:	8b bb       	out	0x1b, r24	; 27
	Command_Port &= ~(1 << RS);		/* Make RS LOW to select command register */
 86e:	a8 98       	cbi	0x15, 0	; 21
	Command_Port &= ~(1 << RW);		/* Make RW LOW to select write operation */
 870:	a9 98       	cbi	0x15, 1	; 21
	Command_Port |=  (1 << EN);		/* Make HIGH to LOW transition on Enable pin */
 872:	aa 9a       	sbi	0x15, 2	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 874:	8d e0       	ldi	r24, 0x0D	; 13
 876:	8a 95       	dec	r24
 878:	f1 f7       	brne	.-4      	; 0x876 <GLCD_Command+0xa>
 87a:	00 00       	nop
	_delay_us(5);
	Command_Port &= ~(1 << EN);
 87c:	aa 98       	cbi	0x15, 2	; 21
 87e:	8d e0       	ldi	r24, 0x0D	; 13
 880:	8a 95       	dec	r24
 882:	f1 f7       	brne	.-4      	; 0x880 <GLCD_Command+0x14>
 884:	00 00       	nop
 886:	08 95       	ret

00000888 <GLCD_Data>:
	_delay_us(5);
}

void GLCD_Data(char Data)			/* GLCD data function */
{
	Data_Port = Data;				/* Copy data on data pin */
 888:	8b bb       	out	0x1b, r24	; 27
	Command_Port |=  (1 << RS);		/* Make RS HIGH to select data register */
 88a:	a8 9a       	sbi	0x15, 0	; 21
	Command_Port &= ~(1 << RW);		/* Make RW LOW to select write operation */
 88c:	a9 98       	cbi	0x15, 1	; 21
	Command_Port |=  (1 << EN);		/* Make HIGH to LOW transition on Enable pin */
 88e:	aa 9a       	sbi	0x15, 2	; 21
 890:	8d e0       	ldi	r24, 0x0D	; 13
 892:	8a 95       	dec	r24
 894:	f1 f7       	brne	.-4      	; 0x892 <GLCD_Data+0xa>
 896:	00 00       	nop
	_delay_us(5);
	Command_Port &= ~(1 << EN);
 898:	aa 98       	cbi	0x15, 2	; 21
 89a:	8d e0       	ldi	r24, 0x0D	; 13
 89c:	8a 95       	dec	r24
 89e:	f1 f7       	brne	.-4      	; 0x89c <GLCD_Data+0x14>
 8a0:	00 00       	nop
 8a2:	08 95       	ret

000008a4 <GLCD_Init>:
	_delay_us(5);
}

void GLCD_Init()					/* GLCD initialize function */
{
	Data_Port_Dir = 0xFF;
 8a4:	8f ef       	ldi	r24, 0xFF	; 255
 8a6:	8a bb       	out	0x1a, r24	; 26
	Command_Port_Dir = 0xFF;
 8a8:	84 bb       	out	0x14, r24	; 20
	/* Select both left & right half of display & Keep reset pin high */
	Command_Port |= (1 << CS1) | (1 << CS2) | (1 << RST);
 8aa:	85 b3       	in	r24, 0x15	; 21
 8ac:	88 63       	ori	r24, 0x38	; 56
 8ae:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 8b0:	8f e3       	ldi	r24, 0x3F	; 63
 8b2:	9c e9       	ldi	r25, 0x9C	; 156
 8b4:	01 97       	sbiw	r24, 0x01	; 1
 8b6:	f1 f7       	brne	.-4      	; 0x8b4 <GLCD_Init+0x10>
 8b8:	00 c0       	rjmp	.+0      	; 0x8ba <GLCD_Init+0x16>
 8ba:	00 00       	nop
	_delay_ms(20);
	GLCD_Command(0x3E);				/* Display OFF */
 8bc:	8e e3       	ldi	r24, 0x3E	; 62
 8be:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
	GLCD_Command(0x40);				/* Set Y address (column=0) */
 8c2:	80 e4       	ldi	r24, 0x40	; 64
 8c4:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
	GLCD_Command(0xB8);				/* Set x address (page=0) */
 8c8:	88 eb       	ldi	r24, 0xB8	; 184
 8ca:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
	GLCD_Command(0xC0);				/* Set z address (start line=0) */
 8ce:	80 ec       	ldi	r24, 0xC0	; 192
 8d0:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
	GLCD_Command(0x3F);				/* Display ON */
 8d4:	8f e3       	ldi	r24, 0x3F	; 63
 8d6:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
 8da:	08 95       	ret

000008dc <GLCD_ClearAll>:
}

void GLCD_ClearAll()				/* GLCD all display clear function */
{
 8dc:	1f 93       	push	r17
 8de:	cf 93       	push	r28
 8e0:	df 93       	push	r29
	int i,j;
	/* Select both left & right half of display */
	Command_Port |= (1 << CS1) | (1 << CS2);
 8e2:	85 b3       	in	r24, 0x15	; 21
 8e4:	88 61       	ori	r24, 0x18	; 24
 8e6:	85 bb       	out	0x15, r24	; 21
 8e8:	18 eb       	ldi	r17, 0xB8	; 184
	for(i = 0; i < TotalPage; i++)
	{
		GLCD_Command((0xB8) + i);	/* Increment page each time after 64 column */
 8ea:	81 2f       	mov	r24, r17
 8ec:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
 8f0:	c0 e4       	ldi	r28, 0x40	; 64
 8f2:	d0 e0       	ldi	r29, 0x00	; 0
		for(j = 0; j < 64; j++)
		{
			GLCD_Data(0);			/* Write zeros to all 64 column */
 8f4:	80 e0       	ldi	r24, 0x00	; 0
 8f6:	0e 94 44 04 	call	0x888	; 0x888 <GLCD_Data>
 8fa:	21 97       	sbiw	r28, 0x01	; 1
	/* Select both left & right half of display */
	Command_Port |= (1 << CS1) | (1 << CS2);
	for(i = 0; i < TotalPage; i++)
	{
		GLCD_Command((0xB8) + i);	/* Increment page each time after 64 column */
		for(j = 0; j < 64; j++)
 8fc:	d9 f7       	brne	.-10     	; 0x8f4 <GLCD_ClearAll+0x18>
 8fe:	1f 5f       	subi	r17, 0xFF	; 255
void GLCD_ClearAll()				/* GLCD all display clear function */
{
	int i,j;
	/* Select both left & right half of display */
	Command_Port |= (1 << CS1) | (1 << CS2);
	for(i = 0; i < TotalPage; i++)
 900:	10 3c       	cpi	r17, 0xC0	; 192
 902:	99 f7       	brne	.-26     	; 0x8ea <GLCD_ClearAll+0xe>
		for(j = 0; j < 64; j++)
		{
			GLCD_Data(0);			/* Write zeros to all 64 column */
		}
	}
	GLCD_Command(0x40);				/* Set Y address (column=0) */
 904:	80 e4       	ldi	r24, 0x40	; 64
 906:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
	GLCD_Command(0xB8);				/* Set x address (page=0) */
 90a:	88 eb       	ldi	r24, 0xB8	; 184
 90c:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
}
 910:	df 91       	pop	r29
 912:	cf 91       	pop	r28
 914:	1f 91       	pop	r17
 916:	08 95       	ret

00000918 <GLCD_String>:

void GLCD_String(const char* image)	/* GLCD string write function */
{
 918:	8f 92       	push	r8
 91a:	9f 92       	push	r9
 91c:	af 92       	push	r10
 91e:	bf 92       	push	r11
 920:	cf 92       	push	r12
 922:	df 92       	push	r13
 924:	ef 92       	push	r14
 926:	ff 92       	push	r15
 928:	0f 93       	push	r16
 92a:	1f 93       	push	r17
 92c:	cf 93       	push	r28
 92e:	df 93       	push	r29
	int column,page,page_add=0xB8,k=0;
	float page_inc=0.5;
	char byte;

	Command_Port |= (1 << CS1);		/* Select first Left half of display */
 930:	ab 9a       	sbi	0x15, 3	; 21
	Command_Port &= ~(1 << CS2);
 932:	ac 98       	cbi	0x15, 4	; 21
 934:	ec 01       	movw	r28, r24
 936:	7c 01       	movw	r14, r24
 938:	2c ef       	ldi	r18, 0xFC	; 252
 93a:	f2 1a       	sub	r15, r18
}

void GLCD_String(const char* image)	/* GLCD string write function */
{
	int column,page,page_add=0xB8,k=0;
	float page_inc=0.5;
 93c:	0f 2e       	mov	r0, r31
 93e:	81 2c       	mov	r8, r1
 940:	91 2c       	mov	r9, r1
 942:	a1 2c       	mov	r10, r1
 944:	ff e3       	ldi	r31, 0x3F	; 63
 946:	bf 2e       	mov	r11, r31
 948:	f0 2d       	mov	r31, r0
		for(column=0;column<64;column++)
		{
			byte = pgm_read_byte(&image[k+column]);
			GLCD_Data(byte);		/* Print 64 column of each page */
		}
		Command_Port ^= (1 << CS1);	/* If yes then change segment controller */
 94a:	68 94       	set
 94c:	cc 24       	eor	r12, r12
 94e:	c3 f8       	bld	r12, 3
		Command_Port ^= (1 << CS2);
 950:	68 94       	set
 952:	dd 24       	eor	r13, r13
 954:	d4 f8       	bld	r13, 4
 956:	29 c0       	rjmp	.+82     	; 0x9aa <GLCD_String+0x92>
	
	for(page=0;page<16;page++)		/* Print 16 pages i.e. 8 page of each half of display */
	{
		for(column=0;column<64;column++)
		{
			byte = pgm_read_byte(&image[k+column]);
 958:	fe 01       	movw	r30, r28
 95a:	84 91       	lpm	r24, Z
			GLCD_Data(byte);		/* Print 64 column of each page */
 95c:	0e 94 44 04 	call	0x888	; 0x888 <GLCD_Data>
 960:	21 96       	adiw	r28, 0x01	; 1
	Command_Port |= (1 << CS1);		/* Select first Left half of display */
	Command_Port &= ~(1 << CS2);
	
	for(page=0;page<16;page++)		/* Print 16 pages i.e. 8 page of each half of display */
	{
		for(column=0;column<64;column++)
 962:	c0 17       	cp	r28, r16
 964:	d1 07       	cpc	r29, r17
 966:	c1 f7       	brne	.-16     	; 0x958 <GLCD_String+0x40>
		{
			byte = pgm_read_byte(&image[k+column]);
			GLCD_Data(byte);		/* Print 64 column of each page */
		}
		Command_Port ^= (1 << CS1);	/* If yes then change segment controller */
 968:	85 b3       	in	r24, 0x15	; 21
 96a:	8c 25       	eor	r24, r12
 96c:	85 bb       	out	0x15, r24	; 21
		Command_Port ^= (1 << CS2);
 96e:	85 b3       	in	r24, 0x15	; 21
 970:	8d 25       	eor	r24, r13
 972:	85 bb       	out	0x15, r24	; 21
		GLCD_Command((page_add+page_inc));/* Increment page address */
 974:	20 e0       	ldi	r18, 0x00	; 0
 976:	30 e0       	ldi	r19, 0x00	; 0
 978:	48 e3       	ldi	r20, 0x38	; 56
 97a:	53 e4       	ldi	r21, 0x43	; 67
 97c:	c5 01       	movw	r24, r10
 97e:	b4 01       	movw	r22, r8
 980:	0e 94 0c 05 	call	0xa18	; 0xa18 <__addsf3>
 984:	0e 94 78 05 	call	0xaf0	; 0xaf0 <__fixunssfsi>
 988:	86 2f       	mov	r24, r22
 98a:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
		page_inc=page_inc+0.5;
 98e:	20 e0       	ldi	r18, 0x00	; 0
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	40 e0       	ldi	r20, 0x00	; 0
 994:	5f e3       	ldi	r21, 0x3F	; 63
 996:	c5 01       	movw	r24, r10
 998:	b4 01       	movw	r22, r8
 99a:	0e 94 0c 05 	call	0xa18	; 0xa18 <__addsf3>
 99e:	4b 01       	movw	r8, r22
 9a0:	5c 01       	movw	r10, r24
 9a2:	e8 01       	movw	r28, r16
	char byte;

	Command_Port |= (1 << CS1);		/* Select first Left half of display */
	Command_Port &= ~(1 << CS2);
	
	for(page=0;page<16;page++)		/* Print 16 pages i.e. 8 page of each half of display */
 9a4:	0e 15       	cp	r16, r14
 9a6:	1f 05       	cpc	r17, r15
 9a8:	21 f0       	breq	.+8      	; 0x9b2 <GLCD_String+0x9a>
 9aa:	8e 01       	movw	r16, r28
 9ac:	00 5c       	subi	r16, 0xC0	; 192
 9ae:	1f 4f       	sbci	r17, 0xFF	; 255
 9b0:	d3 cf       	rjmp	.-90     	; 0x958 <GLCD_String+0x40>
		Command_Port ^= (1 << CS2);
		GLCD_Command((page_add+page_inc));/* Increment page address */
		page_inc=page_inc+0.5;
		k=k+64;						/* Increment pointer */
	}
	GLCD_Command(0x40);				/* Set Y address (column=0) */
 9b2:	80 e4       	ldi	r24, 0x40	; 64
 9b4:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
	GLCD_Command(0xB8);				/* Set x address (page=0) */
 9b8:	88 eb       	ldi	r24, 0xB8	; 184
 9ba:	0e 94 36 04 	call	0x86c	; 0x86c <GLCD_Command>
}
 9be:	df 91       	pop	r29
 9c0:	cf 91       	pop	r28
 9c2:	1f 91       	pop	r17
 9c4:	0f 91       	pop	r16
 9c6:	ff 90       	pop	r15
 9c8:	ef 90       	pop	r14
 9ca:	df 90       	pop	r13
 9cc:	cf 90       	pop	r12
 9ce:	bf 90       	pop	r11
 9d0:	af 90       	pop	r10
 9d2:	9f 90       	pop	r9
 9d4:	8f 90       	pop	r8
 9d6:	08 95       	ret

000009d8 <main>:

int main(void)
{
	GLCD_Init();					/* Initialize GLCD */
 9d8:	0e 94 52 04 	call	0x8a4	; 0x8a4 <GLCD_Init>
	GLCD_ClearAll();				/* Clear all GLCD display */
 9dc:	0e 94 6e 04 	call	0x8dc	; 0x8dc <GLCD_ClearAll>
	while(1)
	{
		GLCD_String(img);
 9e0:	84 e5       	ldi	r24, 0x54	; 84
 9e2:	94 e0       	ldi	r25, 0x04	; 4
 9e4:	0e 94 8c 04 	call	0x918	; 0x918 <GLCD_String>
 9e8:	2f ef       	ldi	r18, 0xFF	; 255
 9ea:	84 e3       	ldi	r24, 0x34	; 52
 9ec:	9c e0       	ldi	r25, 0x0C	; 12
 9ee:	21 50       	subi	r18, 0x01	; 1
 9f0:	80 40       	sbci	r24, 0x00	; 0
 9f2:	90 40       	sbci	r25, 0x00	; 0
 9f4:	e1 f7       	brne	.-8      	; 0x9ee <main+0x16>
 9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <main+0x20>
 9f8:	00 00       	nop
		_delay_ms(500);
		GLCD_String(img1);
 9fa:	84 e5       	ldi	r24, 0x54	; 84
 9fc:	90 e0       	ldi	r25, 0x00	; 0
 9fe:	0e 94 8c 04 	call	0x918	; 0x918 <GLCD_String>
 a02:	2f ef       	ldi	r18, 0xFF	; 255
 a04:	84 e3       	ldi	r24, 0x34	; 52
 a06:	9c e0       	ldi	r25, 0x0C	; 12
 a08:	21 50       	subi	r18, 0x01	; 1
 a0a:	80 40       	sbci	r24, 0x00	; 0
 a0c:	90 40       	sbci	r25, 0x00	; 0
 a0e:	e1 f7       	brne	.-8      	; 0xa08 <main+0x30>
 a10:	00 c0       	rjmp	.+0      	; 0xa12 <main+0x3a>
 a12:	00 00       	nop
 a14:	e5 cf       	rjmp	.-54     	; 0x9e0 <main+0x8>

00000a16 <__subsf3>:
 a16:	50 58       	subi	r21, 0x80	; 128

00000a18 <__addsf3>:
 a18:	bb 27       	eor	r27, r27
 a1a:	aa 27       	eor	r26, r26
 a1c:	0e 94 23 05 	call	0xa46	; 0xa46 <__addsf3x>
 a20:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__fp_round>
 a24:	0e 94 b0 05 	call	0xb60	; 0xb60 <__fp_pscA>
 a28:	38 f0       	brcs	.+14     	; 0xa38 <__addsf3+0x20>
 a2a:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__fp_pscB>
 a2e:	20 f0       	brcs	.+8      	; 0xa38 <__addsf3+0x20>
 a30:	39 f4       	brne	.+14     	; 0xa40 <__addsf3+0x28>
 a32:	9f 3f       	cpi	r25, 0xFF	; 255
 a34:	19 f4       	brne	.+6      	; 0xa3c <__addsf3+0x24>
 a36:	26 f4       	brtc	.+8      	; 0xa40 <__addsf3+0x28>
 a38:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__fp_nan>
 a3c:	0e f4       	brtc	.+2      	; 0xa40 <__addsf3+0x28>
 a3e:	e0 95       	com	r30
 a40:	e7 fb       	bst	r30, 7
 a42:	0c 94 a7 05 	jmp	0xb4e	; 0xb4e <__fp_inf>

00000a46 <__addsf3x>:
 a46:	e9 2f       	mov	r30, r25
 a48:	0e 94 cf 05 	call	0xb9e	; 0xb9e <__fp_split3>
 a4c:	58 f3       	brcs	.-42     	; 0xa24 <__addsf3+0xc>
 a4e:	ba 17       	cp	r27, r26
 a50:	62 07       	cpc	r22, r18
 a52:	73 07       	cpc	r23, r19
 a54:	84 07       	cpc	r24, r20
 a56:	95 07       	cpc	r25, r21
 a58:	20 f0       	brcs	.+8      	; 0xa62 <__addsf3x+0x1c>
 a5a:	79 f4       	brne	.+30     	; 0xa7a <__addsf3x+0x34>
 a5c:	a6 f5       	brtc	.+104    	; 0xac6 <__addsf3x+0x80>
 a5e:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__fp_zero>
 a62:	0e f4       	brtc	.+2      	; 0xa66 <__addsf3x+0x20>
 a64:	e0 95       	com	r30
 a66:	0b 2e       	mov	r0, r27
 a68:	ba 2f       	mov	r27, r26
 a6a:	a0 2d       	mov	r26, r0
 a6c:	0b 01       	movw	r0, r22
 a6e:	b9 01       	movw	r22, r18
 a70:	90 01       	movw	r18, r0
 a72:	0c 01       	movw	r0, r24
 a74:	ca 01       	movw	r24, r20
 a76:	a0 01       	movw	r20, r0
 a78:	11 24       	eor	r1, r1
 a7a:	ff 27       	eor	r31, r31
 a7c:	59 1b       	sub	r21, r25
 a7e:	99 f0       	breq	.+38     	; 0xaa6 <__addsf3x+0x60>
 a80:	59 3f       	cpi	r21, 0xF9	; 249
 a82:	50 f4       	brcc	.+20     	; 0xa98 <__addsf3x+0x52>
 a84:	50 3e       	cpi	r21, 0xE0	; 224
 a86:	68 f1       	brcs	.+90     	; 0xae2 <__addsf3x+0x9c>
 a88:	1a 16       	cp	r1, r26
 a8a:	f0 40       	sbci	r31, 0x00	; 0
 a8c:	a2 2f       	mov	r26, r18
 a8e:	23 2f       	mov	r18, r19
 a90:	34 2f       	mov	r19, r20
 a92:	44 27       	eor	r20, r20
 a94:	58 5f       	subi	r21, 0xF8	; 248
 a96:	f3 cf       	rjmp	.-26     	; 0xa7e <__addsf3x+0x38>
 a98:	46 95       	lsr	r20
 a9a:	37 95       	ror	r19
 a9c:	27 95       	ror	r18
 a9e:	a7 95       	ror	r26
 aa0:	f0 40       	sbci	r31, 0x00	; 0
 aa2:	53 95       	inc	r21
 aa4:	c9 f7       	brne	.-14     	; 0xa98 <__addsf3x+0x52>
 aa6:	7e f4       	brtc	.+30     	; 0xac6 <__addsf3x+0x80>
 aa8:	1f 16       	cp	r1, r31
 aaa:	ba 0b       	sbc	r27, r26
 aac:	62 0b       	sbc	r22, r18
 aae:	73 0b       	sbc	r23, r19
 ab0:	84 0b       	sbc	r24, r20
 ab2:	ba f0       	brmi	.+46     	; 0xae2 <__addsf3x+0x9c>
 ab4:	91 50       	subi	r25, 0x01	; 1
 ab6:	a1 f0       	breq	.+40     	; 0xae0 <__addsf3x+0x9a>
 ab8:	ff 0f       	add	r31, r31
 aba:	bb 1f       	adc	r27, r27
 abc:	66 1f       	adc	r22, r22
 abe:	77 1f       	adc	r23, r23
 ac0:	88 1f       	adc	r24, r24
 ac2:	c2 f7       	brpl	.-16     	; 0xab4 <__addsf3x+0x6e>
 ac4:	0e c0       	rjmp	.+28     	; 0xae2 <__addsf3x+0x9c>
 ac6:	ba 0f       	add	r27, r26
 ac8:	62 1f       	adc	r22, r18
 aca:	73 1f       	adc	r23, r19
 acc:	84 1f       	adc	r24, r20
 ace:	48 f4       	brcc	.+18     	; 0xae2 <__addsf3x+0x9c>
 ad0:	87 95       	ror	r24
 ad2:	77 95       	ror	r23
 ad4:	67 95       	ror	r22
 ad6:	b7 95       	ror	r27
 ad8:	f7 95       	ror	r31
 ada:	9e 3f       	cpi	r25, 0xFE	; 254
 adc:	08 f0       	brcs	.+2      	; 0xae0 <__addsf3x+0x9a>
 ade:	b0 cf       	rjmp	.-160    	; 0xa40 <__addsf3+0x28>
 ae0:	93 95       	inc	r25
 ae2:	88 0f       	add	r24, r24
 ae4:	08 f0       	brcs	.+2      	; 0xae8 <__addsf3x+0xa2>
 ae6:	99 27       	eor	r25, r25
 ae8:	ee 0f       	add	r30, r30
 aea:	97 95       	ror	r25
 aec:	87 95       	ror	r24
 aee:	08 95       	ret

00000af0 <__fixunssfsi>:
 af0:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_splitA>
 af4:	88 f0       	brcs	.+34     	; 0xb18 <__fixunssfsi+0x28>
 af6:	9f 57       	subi	r25, 0x7F	; 127
 af8:	98 f0       	brcs	.+38     	; 0xb20 <__fixunssfsi+0x30>
 afa:	b9 2f       	mov	r27, r25
 afc:	99 27       	eor	r25, r25
 afe:	b7 51       	subi	r27, 0x17	; 23
 b00:	b0 f0       	brcs	.+44     	; 0xb2e <__fixunssfsi+0x3e>
 b02:	e1 f0       	breq	.+56     	; 0xb3c <__fixunssfsi+0x4c>
 b04:	66 0f       	add	r22, r22
 b06:	77 1f       	adc	r23, r23
 b08:	88 1f       	adc	r24, r24
 b0a:	99 1f       	adc	r25, r25
 b0c:	1a f0       	brmi	.+6      	; 0xb14 <__fixunssfsi+0x24>
 b0e:	ba 95       	dec	r27
 b10:	c9 f7       	brne	.-14     	; 0xb04 <__fixunssfsi+0x14>
 b12:	14 c0       	rjmp	.+40     	; 0xb3c <__fixunssfsi+0x4c>
 b14:	b1 30       	cpi	r27, 0x01	; 1
 b16:	91 f0       	breq	.+36     	; 0xb3c <__fixunssfsi+0x4c>
 b18:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_zero>
 b1c:	b1 e0       	ldi	r27, 0x01	; 1
 b1e:	08 95       	ret
 b20:	0c 94 f1 05 	jmp	0xbe2	; 0xbe2 <__fp_zero>
 b24:	67 2f       	mov	r22, r23
 b26:	78 2f       	mov	r23, r24
 b28:	88 27       	eor	r24, r24
 b2a:	b8 5f       	subi	r27, 0xF8	; 248
 b2c:	39 f0       	breq	.+14     	; 0xb3c <__fixunssfsi+0x4c>
 b2e:	b9 3f       	cpi	r27, 0xF9	; 249
 b30:	cc f3       	brlt	.-14     	; 0xb24 <__fixunssfsi+0x34>
 b32:	86 95       	lsr	r24
 b34:	77 95       	ror	r23
 b36:	67 95       	ror	r22
 b38:	b3 95       	inc	r27
 b3a:	d9 f7       	brne	.-10     	; 0xb32 <__fixunssfsi+0x42>
 b3c:	3e f4       	brtc	.+14     	; 0xb4c <__fixunssfsi+0x5c>
 b3e:	90 95       	com	r25
 b40:	80 95       	com	r24
 b42:	70 95       	com	r23
 b44:	61 95       	neg	r22
 b46:	7f 4f       	sbci	r23, 0xFF	; 255
 b48:	8f 4f       	sbci	r24, 0xFF	; 255
 b4a:	9f 4f       	sbci	r25, 0xFF	; 255
 b4c:	08 95       	ret

00000b4e <__fp_inf>:
 b4e:	97 f9       	bld	r25, 7
 b50:	9f 67       	ori	r25, 0x7F	; 127
 b52:	80 e8       	ldi	r24, 0x80	; 128
 b54:	70 e0       	ldi	r23, 0x00	; 0
 b56:	60 e0       	ldi	r22, 0x00	; 0
 b58:	08 95       	ret

00000b5a <__fp_nan>:
 b5a:	9f ef       	ldi	r25, 0xFF	; 255
 b5c:	80 ec       	ldi	r24, 0xC0	; 192
 b5e:	08 95       	ret

00000b60 <__fp_pscA>:
 b60:	00 24       	eor	r0, r0
 b62:	0a 94       	dec	r0
 b64:	16 16       	cp	r1, r22
 b66:	17 06       	cpc	r1, r23
 b68:	18 06       	cpc	r1, r24
 b6a:	09 06       	cpc	r0, r25
 b6c:	08 95       	ret

00000b6e <__fp_pscB>:
 b6e:	00 24       	eor	r0, r0
 b70:	0a 94       	dec	r0
 b72:	12 16       	cp	r1, r18
 b74:	13 06       	cpc	r1, r19
 b76:	14 06       	cpc	r1, r20
 b78:	05 06       	cpc	r0, r21
 b7a:	08 95       	ret

00000b7c <__fp_round>:
 b7c:	09 2e       	mov	r0, r25
 b7e:	03 94       	inc	r0
 b80:	00 0c       	add	r0, r0
 b82:	11 f4       	brne	.+4      	; 0xb88 <__fp_round+0xc>
 b84:	88 23       	and	r24, r24
 b86:	52 f0       	brmi	.+20     	; 0xb9c <__fp_round+0x20>
 b88:	bb 0f       	add	r27, r27
 b8a:	40 f4       	brcc	.+16     	; 0xb9c <__fp_round+0x20>
 b8c:	bf 2b       	or	r27, r31
 b8e:	11 f4       	brne	.+4      	; 0xb94 <__fp_round+0x18>
 b90:	60 ff       	sbrs	r22, 0
 b92:	04 c0       	rjmp	.+8      	; 0xb9c <__fp_round+0x20>
 b94:	6f 5f       	subi	r22, 0xFF	; 255
 b96:	7f 4f       	sbci	r23, 0xFF	; 255
 b98:	8f 4f       	sbci	r24, 0xFF	; 255
 b9a:	9f 4f       	sbci	r25, 0xFF	; 255
 b9c:	08 95       	ret

00000b9e <__fp_split3>:
 b9e:	57 fd       	sbrc	r21, 7
 ba0:	90 58       	subi	r25, 0x80	; 128
 ba2:	44 0f       	add	r20, r20
 ba4:	55 1f       	adc	r21, r21
 ba6:	59 f0       	breq	.+22     	; 0xbbe <__fp_splitA+0x10>
 ba8:	5f 3f       	cpi	r21, 0xFF	; 255
 baa:	71 f0       	breq	.+28     	; 0xbc8 <__fp_splitA+0x1a>
 bac:	47 95       	ror	r20

00000bae <__fp_splitA>:
 bae:	88 0f       	add	r24, r24
 bb0:	97 fb       	bst	r25, 7
 bb2:	99 1f       	adc	r25, r25
 bb4:	61 f0       	breq	.+24     	; 0xbce <__fp_splitA+0x20>
 bb6:	9f 3f       	cpi	r25, 0xFF	; 255
 bb8:	79 f0       	breq	.+30     	; 0xbd8 <__fp_splitA+0x2a>
 bba:	87 95       	ror	r24
 bbc:	08 95       	ret
 bbe:	12 16       	cp	r1, r18
 bc0:	13 06       	cpc	r1, r19
 bc2:	14 06       	cpc	r1, r20
 bc4:	55 1f       	adc	r21, r21
 bc6:	f2 cf       	rjmp	.-28     	; 0xbac <__fp_split3+0xe>
 bc8:	46 95       	lsr	r20
 bca:	f1 df       	rcall	.-30     	; 0xbae <__fp_splitA>
 bcc:	08 c0       	rjmp	.+16     	; 0xbde <__fp_splitA+0x30>
 bce:	16 16       	cp	r1, r22
 bd0:	17 06       	cpc	r1, r23
 bd2:	18 06       	cpc	r1, r24
 bd4:	99 1f       	adc	r25, r25
 bd6:	f1 cf       	rjmp	.-30     	; 0xbba <__fp_splitA+0xc>
 bd8:	86 95       	lsr	r24
 bda:	71 05       	cpc	r23, r1
 bdc:	61 05       	cpc	r22, r1
 bde:	08 94       	sec
 be0:	08 95       	ret

00000be2 <__fp_zero>:
 be2:	e8 94       	clt

00000be4 <__fp_szero>:
 be4:	bb 27       	eor	r27, r27
 be6:	66 27       	eor	r22, r22
 be8:	77 27       	eor	r23, r23
 bea:	cb 01       	movw	r24, r22
 bec:	97 f9       	bld	r25, 7
 bee:	08 95       	ret

00000bf0 <_exit>:
 bf0:	f8 94       	cli

00000bf2 <__stop_program>:
 bf2:	ff cf       	rjmp	.-2      	; 0xbf2 <__stop_program>
